#Область ОписаниеПеременных

Перем КартинкаЗеленыйРеквизит;
Перем КартинкаИндексы;
Перем КартинкаОбщиеРеквизиты;
Перем КартинкаПризнакиУчета;
Перем КартинкаПризнакиУчетаСубконто;
Перем КартинкаСтандартныеТабличныеЧасти;
Перем КартинкаПапка;

Перем СтруктураХранения;

Перем ИмяВТаблицахХранения;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьДеревоМетаданных1С(МетаДерево) Экспорт 
	МетаДерево.Строки.Очистить();	
	//МетаДерево = Новый ДеревоЗначений;	
	
	//ОписаниеКонфигурации = ОписаниеОбъектаМетаданных();
	//ОписаниеКонфигурации.Метаданные = Метаданные;
	//ОписаниеКонфигурации.Имя = СтрШаблон("%1(%2)", Метаданные.Имя, Метаданные.Версия);
	
	СтруктураХранения = ПолучитьСтруктуруХраненияБазыДанных(, ИменаБазыДанных); 	
	
	СтруктураХранения.Индексы.Добавить("Назначение, Метаданные");
	
	
	ДеревоКонфигурации = ДобавитьСтрокуДереваКонфигурации(МетаДерево, Метаданные, Новый Картинка(ПолучитьМакет("КартинкаОранжевыйКруг")));
	
	КоллекцииОбходаМетаданных = Новый Массив();
	СвойстваКоллекции = ОписаниеОбъектаМетаданных();
	СвойстваКоллекции.Метаданные = Метаданные;
	СвойстваКоллекции.Имя = Метаданные.Имя;
	
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.Константы, 					"Константы", 				СвойстваКоллекции,	БиблиотекаКартинок.Константа);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.Справочники, 				"Справочники", 				СвойстваКоллекции,	БиблиотекаКартинок.Справочник);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.Документы, 					"Документы", 				СвойстваКоллекции,	БиблиотекаКартинок.Документ);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.ПланыВидовХарактеристик,	"ПланыВидовХарактеристик", 	СвойстваКоллекции,	БиблиотекаКартинок.ПланВидовХарактеристикОбъект);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.ПланыСчетов, 				"ПланыСчетов", 				СвойстваКоллекции,	БиблиотекаКартинок.ПланСчетов);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.ПланыВидовРасчета, 			"ПланыВидовРасчета", 		СвойстваКоллекции,	БиблиотекаКартинок.ПланВидовРасчета);	
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.РегистрыСведений, 			"РегистрыСведений", 		СвойстваКоллекции,	БиблиотекаКартинок.РегистрСведений);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.РегистрыНакопления, 		"РегистрыНакопления", 		СвойстваКоллекции,	БиблиотекаКартинок.РегистрНакопления);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.РегистрыБухгалтерии, 		"РегистрыБухгалтерии", 		СвойстваКоллекции,	БиблиотекаКартинок.РегистрБухгалтерии);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.РегистрыРасчета, 			"РегистрыРасчета", 			СвойстваКоллекции,	БиблиотекаКартинок.РегистрРасчета);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.БизнесПроцессы, 			"БизнесПроцессы", 			СвойстваКоллекции,	БиблиотекаКартинок.БизнесПроцесс);
	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Метаданные.Задачи, 					"Задачи", 					СвойстваКоллекции,	БиблиотекаКартинок.Задача);
	
	
	Для Каждого ОписаниеКоллекцииМетаданных Из КоллекцииОбходаМетаданных Цикл	
		НоваяСтрокаДерева = ДобавитьСтрокуДереваКонфигурации(ДеревоКонфигурации, ОписаниеКоллекцииМетаданных, ОписаниеКоллекцииМетаданных.Картинка); 		
		СформироватьДеревоИзКонфигурации(НоваяСтрокаДерева, ОписаниеКоллекцииМетаданных);
	КонецЦикла;	
	
	//СформироватьДеревоИзКонфигурации(ДеревоКонфигурации, Метаданные); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДеревоИзКонфигурации(СтрокаРодитель, ОписаниеКонфигурации)
	Для Каждого ОписаниеКоллекцииМетаданных Из ПолучитьСписокСвойствДляОбходаКоллекцийМетаданныхКонфигурации(ОписаниеКонфигурации) Цикл	
		НоваяСтрокаДерева = ДобавитьСтрокуДереваКонфигурации(СтрокаРодитель, ОписаниеКоллекцииМетаданных, ОписаниеКоллекцииМетаданных.Картинка); 		
		СформироватьДеревоИзКонфигурации(НоваяСтрокаДерева, ОписаниеКоллекцииМетаданных);
	КонецЦикла;	
КонецПроцедуры

Функция ОписаниеОбъектаМетаданных()
	Возврат Новый Структура("Метаданные, Имя, Родитель, Синоним, Комментарий, Картинка, ИмяПоляХранения, Поля, Назначение, Индексы, ТипДанных, ОбъектМетаданныхВСтруктуреХранения");	
КонецФункции

Функция ПолучитьСписокСвойствДляОбходаКоллекцийМетаданныхКонфигурации(ОписаниеМетаданных)
	КоллекцииОбходаМетаданных = Новый Массив();
	
	Если ТипЗнч(ОписаниеМетаданных.Метаданные) = Тип("КоллекцияОбъектовМетаданных") Или ТипЗнч(ОписаниеМетаданных.Метаданные) = Тип("ОписанияСтандартныхРеквизитов") Тогда 
		Для Каждого ОбъектМетаданных Из ОписаниеМетаданных.Метаданные Цикл  
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбъектМетаданных, ОбъектМетаданных.Имя, ОписаниеМетаданных);		
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(ОписаниеМетаданных.Метаданные) = Тип("ОписанияСтандартныхТабличныхЧастей") Тогда 
		Для Каждого ОбъектМетаданных Из ОписаниеМетаданных.Метаданные Цикл  
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбъектМетаданных, ОбъектМетаданных.Имя, ОписаниеМетаданных.Родитель);		
		КонецЦикла;				
		
	ИначеЕсли ТипЗнч(ОписаниеМетаданных.Метаданные) = Тип("ОбъектМетаданных") Тогда 
		
		//ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыОбъектаМетаданых(ОписаниеМетаданных), 	"Таблицы",	ОписаниеМетаданных.Имя,	КартинкаПапка);
		Сгруппировать = Не ЗначениеЗаполнено(ОписаниеМетаданных.Назначение);
		
		Если ОписаниеМетаданных.Родитель.Имя = "Константы" Тогда	
			Если ОписаниеМетаданных.Назначение = "Константа" Тогда 
				ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных), 	"СтандартныеРеквизиты", 	ОписаниеМетаданных, КартинкаЗеленыйРеквизит,, Ложь);				
				ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбщиеРеквизитыОбъектаМетаданых(ОписаниеМетаданных), 		"ОбщиеРеквизиты",			ОписаниеМетаданных,	КартинкаОбщиеРеквизиты,, Сгруппировать);
				ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ИндексыОбъектаМетаданных(ОписаниеМетаданных), 				"Индексы", 					ОписаниеМетаданных,	КартинкаИндексы,, Ложь);
			КонецЕсли; 
			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыХраненияОбъектаМетаданых(ОписаниеМетаданных), 			"Таблицы",						ОписаниеМетаданных,	КартинкаПапка);
		ИначеЕсли ОписаниеМетаданных.Родитель.Имя = "Индексы" Тогда
			Возврат КоллекцииОбходаМетаданных;
			
		ИначеЕсли ОписаниеМетаданных.Родитель.Имя = "Справочники" Или ОписаниеМетаданных.Родитель.Имя = "ПланыВидовХарактеристик" Или ОписаниеМетаданных.Родитель.Имя = "Документы" Или ОписаниеМетаданных.Родитель.Имя = "БизнесПроцессы" Тогда    
			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных),	"СтандартныеРеквизиты", 		ОписаниеМетаданных, КартинкаЗеленыйРеквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитыОбъектаМетаданных(ОписаниеМетаданных), 			"Реквизиты", 					ОписаниеМетаданных, БиблиотекаКартинок.Реквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОписаниеМетаданных.Метаданные.ТабличныеЧасти, 				"ТабличныеЧасти", 				ОписаниеМетаданных, БиблиотекаКартинок.ВложеннаяТаблица);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбщиеРеквизитыОбъектаМетаданых(ОписаниеМетаданных), 		"ОбщиеРеквизиты",				ОписаниеМетаданных,	КартинкаОбщиеРеквизиты,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ИндексыОбъектаМетаданных(ОписаниеМетаданных), 				"Индексы", 						ОписаниеМетаданных,	КартинкаИндексы);
			
			
			//ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыОбъектаМетаданых(ОписаниеМетаданных), 	"Таблицы",	ОписаниеМетаданных.Имя,	КартинкаОбщиеРеквизиты);
			//ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыОбъектаМетаданых(ОписаниеМетаданных), 	"Таблицы",	ОписаниеМетаданных.Имя,	КартинкаПапка);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыХраненияОбъектаМетаданых(ОписаниеМетаданных), 		"Таблицы",						ОписаниеМетаданных,	КартинкаПапка);
		ИначеЕсли ОписаниеМетаданных.Родитель.Имя = "РегистрыСведений" Или ОписаниеМетаданных.Родитель.Имя = "РегистрыНакопления" Или ОписаниеМетаданных.Родитель.Имя = "РегистрыБухгалтерии" Или ОписаниеМетаданных.Родитель.Имя = "РегистрыРасчета" Тогда	
			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных),	"СтандартныеРеквизиты", 		ОписаниеМетаданных, КартинкаЗеленыйРеквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ИзмеренияОбъектаМетаданных(ОписаниеМетаданных),			"Измерения", 					ОписаниеМетаданных, БиблиотекаКартинок.Измерение,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РесурсыОбъектаМетаданных(ОписаниеМетаданных),				"Ресурсы", 						ОписаниеМетаданных, БиблиотекаКартинок.Ресурс,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитыОбъектаМетаданных(ОписаниеМетаданных), 			"Реквизиты", 					ОписаниеМетаданных, БиблиотекаКартинок.Реквизит,, Сгруппировать);			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбщиеРеквизитыОбъектаМетаданых(ОписаниеМетаданных), 		"ОбщиеРеквизиты",				ОписаниеМетаданных,	КартинкаОбщиеРеквизиты,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ИндексыОбъектаМетаданных(ОписаниеМетаданных), 				"Индексы", 						ОписаниеМетаданных,	КартинкаИндексы);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыХраненияОбъектаМетаданых(ОписаниеМетаданных), 		"Таблицы",						ОписаниеМетаданных,	КартинкаПапка);
			
		ИначеЕсли ОписаниеМетаданных.Родитель.Имя = "ПланыСчетов" Тогда 
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных),	"СтандартныеРеквизиты", 		ОписаниеМетаданных, КартинкаЗеленыйРеквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитыОбъектаМетаданных(ОписаниеМетаданных), 			"Реквизиты", 					ОписаниеМетаданных, БиблиотекаКартинок.Реквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ПризнакиУчетаОбъектаМетаданных(ОписаниеМетаданных), 		"ПризнакиУчета", 				ОписаниеМетаданных, КартинкаПризнакиУчета,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ПризнакиУчетаСубконтоОбъектаМетаданных(ОписаниеМетаданных),"ПризнакиУчетаСубконто",		ОписаниеМетаданных, КартинкаПризнакиУчетаСубконто,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОписаниеМетаданных.Метаданные.СтандартныеТабличныеЧасти, 	"СтандартныеТабличныеЧасти", 	ОписаниеМетаданных, КартинкаСтандартныеТабличныеЧасти);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОписаниеМетаданных.Метаданные.ТабличныеЧасти, 				"ТабличныеЧасти", 				ОписаниеМетаданных, БиблиотекаКартинок.ВложеннаяТаблица);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбщиеРеквизитыОбъектаМетаданых(ОписаниеМетаданных), 		"ОбщиеРеквизиты",				ОписаниеМетаданных,	КартинкаОбщиеРеквизиты,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ИндексыОбъектаМетаданных(ОписаниеМетаданных), 				"Индексы", 						ОписаниеМетаданных,	КартинкаИндексы);
			
			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыХраненияОбъектаМетаданых(ОписаниеМетаданных), 		"Таблицы",						ОписаниеМетаданных,	КартинкаПапка);
		ИначеЕсли ОписаниеМетаданных.Родитель.Имя = "ПланыВидовРасчета" Тогда
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных),	"СтандартныеРеквизиты", 		ОписаниеМетаданных, КартинкаЗеленыйРеквизит,,Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитыОбъектаМетаданных(ОписаниеМетаданных), 			"Реквизиты", 					ОписаниеМетаданных, БиблиотекаКартинок.Реквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОписаниеМетаданных.Метаданные.СтандартныеТабличныеЧасти, 	"СтандартныеТабличныеЧасти", 	ОписаниеМетаданных, КартинкаСтандартныеТабличныеЧасти);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОписаниеМетаданных.Метаданные.ТабличныеЧасти, 				"ТабличныеЧасти", 				ОписаниеМетаданных, БиблиотекаКартинок.ВложеннаяТаблица);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбщиеРеквизитыОбъектаМетаданых(ОписаниеМетаданных), 		"ОбщиеРеквизиты",				ОписаниеМетаданных,	КартинкаОбщиеРеквизиты,, Сгруппировать);							
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ИндексыОбъектаМетаданных(ОписаниеМетаданных), 				"Индексы", 						ОписаниеМетаданных,	КартинкаИндексы);
			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыХраненияОбъектаМетаданых(ОписаниеМетаданных), 		"Таблицы",						ОписаниеМетаданных,	КартинкаПапка);
			
		ИначеЕсли ОписаниеМетаданных.Родитель.Имя = "Задачи" Тогда    
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных),	"СтандартныеРеквизиты", 		ОписаниеМетаданных, КартинкаЗеленыйРеквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитыОбъектаМетаданных(ОписаниеМетаданных), 			"Реквизиты", 					ОписаниеМетаданных, БиблиотекаКартинок.Реквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитыАдресацииОбъектаМетаданных(ОписаниеМетаданных), 	"РеквизитыАдресации", 			ОписаниеМетаданных, КартинкаЗеленыйРеквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОписаниеМетаданных.Метаданные.ТабличныеЧасти, 				"ТабличныеЧасти", 				ОписаниеМетаданных, БиблиотекаКартинок.ВложеннаяТаблица);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбщиеРеквизитыОбъектаМетаданых(ОписаниеМетаданных), 		"ОбщиеРеквизиты",				ОписаниеМетаданных,	КартинкаОбщиеРеквизиты,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ИндексыОбъектаМетаданных(ОписаниеМетаданных), 				"Индексы", 						ОписаниеМетаданных,	КартинкаИндексы);
			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыХраненияОбъектаМетаданых(ОписаниеМетаданных), 		"Таблицы",						ОписаниеМетаданных,	КартинкаПапка);			
		ИначеЕсли ОписаниеМетаданных.Родитель.Имя = "ТабличныеЧасти" Тогда
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных),	"СтандартныеРеквизиты", 		ОписаниеМетаданных, КартинкаЗеленыйРеквизит,, Сгруппировать);
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитыОбъектаМетаданных(ОписаниеМетаданных), 			"Реквизиты", 					ОписаниеМетаданных, БиблиотекаКартинок.Реквизит,, Сгруппировать);				
			//ИначеЕсли ОписаниеМетаданных.Родитель = "СтандартныеТабличныеЧасти" Тогда 
			//ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных.Метаданные),	"СтандартныеРеквизиты", ОписаниеМетаданных.Имя, КартинкаЗеленыйРеквизит);		
			
			
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ТаблицыХраненияОбъектаМетаданых(ОписаниеМетаданных), 		"Таблицы",						ОписаниеМетаданных,	КартинкаПапка);
		КонецЕсли;
		
		
		
	ИначеЕсли ТипЗнч(ОписаниеМетаданных.Метаданные) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда
		ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных),		"СтандартныеРеквизиты", 		ОписаниеМетаданных, КартинкаЗеленыйРеквизит);			
		
	ИначеЕсли ТипЗнч(ОписаниеМетаданных.Метаданные) = Тип("Массив") Тогда	
		Возврат ОписаниеМетаданных.Метаданные; 	
	КонецЕсли;
	
	Возврат КоллекцииОбходаМетаданных;
КонецФункции

Процедура ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, Мета, Имя, СвойстваКоллекции, КартинкаСтроки = Неопределено, ПоляИндекса = Неопределено, Группировать = Истина)
	Если Мета = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	
	Если Не Группировать Тогда 
		Для Каждого СтрокаМета Из Мета Цикл 
			СтрокаМета.Картинка = КартинкаСтроки;
			КоллекцииОбходаМетаданных.Добавить(СтрокаМета);	
		КонецЦикла;
		
	Иначе 
		
		ОписаниеОбъекта = ОписаниеОбъектаМетаданных();
		ОписаниеОбъекта.Метаданные = 	Мета;
		ОписаниеОбъекта.Имя = 			Имя;
		ОписаниеОбъекта.Родитель = 		СвойстваКоллекции;
		ОписаниеОбъекта.Картинка = 		КартинкаСтроки;
		
		
		
		ОписаниеОбъекта.ОбъектМетаданныхВСтруктуреХранения = СвойстваКоллекции.ОбъектМетаданныхВСтруктуреХранения;
		
		
		ОписаниеОбъекта.Поля = ПоляИндекса;
		ОписаниеОбъекта.Назначение = СвойстваКоллекции.Назначение;	
		
		ОписаниеОбъекта.ИмяПоляХранения = СвойстваКоллекции.ИмяПоляХранения;
		
		//ОписаниеОбъекта.Тип = ТипЗнч(Мета);
		//И СвойстваКоллекции.Назначение = "" 
		Если (ТипЗнч(Мета) = Тип("ОбъектМетаданных") Или ТипЗнч(Мета) = Тип("ОписаниеСтандартнойТабличнойЧасти")) Тогда 
			
			
			Если СвойстваКоллекции.ИмяПоляХранения = Неопределено И ТипЗнч(Мета.Родитель()) = Тип("ОбъектМетаданныхКонфигурация") Или СвойстваКоллекции.Имя = "ТабличныеЧасти" Тогда 
				ОбъектМетаданныхВСтруктуреХранения = СтруктураХраненияПоОбъектуМетаданных(Мета.ПолноеИмя());
				ОписаниеОбъекта.ИмяПоляХранения = ОбъектМетаданныхВСтруктуреХранения.ИмяТаблицыХранения;
				ОписаниеОбъекта.ОбъектМетаданныхВСтруктуреХранения = ОбъектМетаданныхВСтруктуреХранения;
			ИначеЕсли ТипЗнч(Мета) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда  
				
				Если ЕстьРеквизитИлиСвойствоОбъекта(ОписаниеОбъекта.Родитель.Метаданные, "ВидыСубконто") И ОписаниеОбъекта.Родитель.Метаданные.ВидыСубконто <> Неопределено Тогда 
					ПолноеИмя = ОписаниеОбъекта.Родитель.Метаданные.ПолноеИмя() + ".ТабличнаяЧасть." + ОписаниеОбъекта.Имя;
					ОбъектМетаданныхВСтруктуреХранения = СтруктураХраненияПоОбъектуМетаданных(ПолноеИмя);
					ОписаниеОбъекта.ИмяПоляХранения = ОбъектМетаданныхВСтруктуреХранения.ИмяТаблицыХранения;
					ОписаниеОбъекта.ОбъектМетаданныхВСтруктуреХранения = ОбъектМетаданныхВСтруктуреХранения;
				КонецЕсли;			
						
			КонецЕсли; 
			
			ОписаниеОбъекта.Синоним = 		Мета.Синоним;
			ОписаниеОбъекта.Комментарий = 	Мета.Комментарий;
			Если СвойстваКоллекции.Имя = "СтандартныеРеквизиты" Или СвойстваКоллекции.Имя = "Реквизиты" Или СвойстваКоллекции.Имя = "Измерения" Или СвойстваКоллекции.Имя = "Ресурсы" Или СвойстваКоллекции.Имя = "ОбщиеРеквизиты" Тогда     
				ОписаниеОбъекта.ТипДанных = 	Мета.Тип;
			КонецЕсли;
		КонецЕсли;
		
		//Если Родитель = "Индексы" Тогда 
		//	
		//КонецЕсли;
		
		КоллекцииОбходаМетаданных.Добавить(ОписаниеОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьСтрокуДереваКонфигурации(Дерево, ОбъектКоллекци, КартинкаСтроки = Неопределено)
	НовыйОбъект = Дерево.Строки.Добавить();
	НовыйОбъект.Имя = 			ОбъектКоллекци.Имя;
	НовыйОбъект.Синоним = 		ОбъектКоллекци.Синоним;
	НовыйОбъект.Комментарий = 	ОбъектКоллекци.Комментарий;
	НовыйОбъект.Картинка = 		КартинкаСтроки;
	//НовыйОбъект.Картинка = 		КартинкаСтроки;
	
	
	Если ТипЗнч(ОбъектКоллекци) = Тип("Структура") Тогда  
		НовыйОбъект.ИмяПоляХранения = ОбъектКоллекци.ИмяПоляХранения;
		
		НовыйОбъект.Поля 	= ОбъектКоллекци.Поля; 
		НовыйОбъект.Индексы = ОбъектКоллекци.Индексы;
		НовыйОбъект.ТипДанных = ОбъектКоллекци.ТипДанных;
		
		Если ТипЗнч(ОбъектКоллекци.Поля) = Тип("ТаблицаЗначений") И ОбъектКоллекци.Родитель.Имя = "Индексы" Тогда  		
			Представление = ОбъектКоллекци.Имя + " [";
			Для Каждого СтрокаПоля Из ОбъектКоллекци.Поля Цикл 
				//ЗаполнитьЗначенияСвойств(НовыйОбъект.Поля.Добавить(), СтрокаПоля);
				Представление = Представление + СтрокаПоля.ИмяПоляХранения + ", ";
			КонецЦикла;
			НовыйОбъект.Представление = Представление + "]"; 		
		Иначе 
			//Если ТипЗнч(ОбъектКоллекци.Метаданные) = Тип("ОбъектМетаданных") Или ТипЗнч(ОбъектКоллекци.Метаданные) = Тип("ОписаниеСтандартногоРеквизита") Или ТипЗнч(ОбъектКоллекци.Метаданные) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда			
				НовыйОбъект.Представление = ?(ЗначениеЗаполнено(ОбъектКоллекци.Назначение), ОбъектКоллекци.Назначение, ОбъектКоллекци.Имя) + " " +  ?(ЗначениеЗаполнено(ОбъектКоллекци.ИмяПоляХранения), "("+ОбъектКоллекци.ИмяПоляХранения+")", "");
			//Иначе 
			//	НовыйОбъект.Представление = ?(ЗначениеЗаполнено(ОбъектКоллекци.Имя), ОбъектКоллекци.Имя, ОбъектКоллекци.ИмяПоляХранения);
			//КонецЕсли;
		КонецЕсли;
		
		
	Иначе 
		НовыйОбъект.Представление = ?(ЗначениеЗаполнено(ОбъектКоллекци.Имя), ОбъектКоллекци.Имя, ОбъектКоллекци.ИмяПоляХранения);
	КонецЕсли;
	//Если ТипЗнч(ОбъектКоллекци) = Тип("ОбъектМетаданных") Тогда 
	//	СтруктураХраненияОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектКоллекци);
	//Иначе 
	//	НовыйОбъект.ИмяПоляХранения = ОбъектКоллекци.ИмяПоляХранения;
	//КонецЕсли;
	
	Возврат НовыйОбъект;
КонецФункции

Функция СтруктураХраненияПоОбъектуМетаданных(ПолноеИмя)
	
	Если СтрНайти(ПолноеИмя, "Константа") <> 0 Тогда 
		Назначение = "Константа";
	ИначеЕсли СтрНайти(ПолноеИмя, "ТабличнаяЧасть") <> 0 Тогда 
		Назначение = "ТабличнаяЧасть";
	Иначе 
		Назначение = "Основная";
	КонецЕсли;
	
	
	Возврат СтруктураХранения.НайтиСтроки(Новый Структура("Назначение, Метаданные", Назначение, ПолноеИмя))[0];	
КонецФункции


Функция ИндексыОбъектаМетаданных(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	
	//ИндексыОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Индексы;
	ИндексыОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Индексы;
	
	Для Каждого ИндексОбъекта Из ИндексыОбъекта Цикл 
		//Если ИндексОбъекта.ИмяИндексаХранения = "ByKey" Тогда 
		//	ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбъектМетаданных, "Ключ", "Индексы", , ИндексОбъекта.ИмяИндексаХранения, ИндексОбъекта.Поля);			
		//Иначе 
		ОписаниеИндекса = ОписаниеОбъектаМетаданных();
		ОписаниеИндекса.Имя = "Индексы";
		ОписаниеИндекса.ИмяПоляХранения = ИндексОбъекта.ИмяИндексаХранения;
		ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОбъектМетаданных, ИндексОбъекта.ИмяИндексаХранения, ОписаниеИндекса, , ИндексОбъекта.Поля);
		//КонецЕсли;
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;
КонецФункции

Функция СтандартныеРеквизитыОбъектаМетаданны(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	//Если ТипЗнч(ОписаниеМетаданных.Метаданные) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда 
	//	Если ОписаниеМетаданных.Родитель.Метаданные.ВидыСубконто = Неопределено Тогда 
	//		Возврат КоллекцииОбходаМетаданных;
	//	КонецЕсли;
	//	
	//	ПолноеИмя = ОписаниеМетаданных.Родитель.Метаданные.ПолноеИмя() + ".ТабличнаяЧасть." + ОбъектМетаданных.Имя;
	//Иначе 
	//	ПолноеИмя = ОбъектМетаданных.ПолноеИмя();	
	//КонецЕсли;
	
	//ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ПолноеИмя).Поля;
	Если ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения = Неопределено Тогда 
		Возврат КоллекцииОбходаМетаданных;
	КонецЕсли;
	
	ТаблицаХраненияОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения;
	ПоляОбъекта = ТаблицаХраненияОбъекта.Поля;
	
	Если ОписаниеМетаданных.Родитель.Имя = "Константы" Тогда 
		Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл
			ОписаниеСтандартногоРеквизита = ОписаниеОбъектаМетаданных();
			ОписаниеСтандартногоРеквизита.Имя = "СтандартныеРеквизиты"; 
			ОписаниеСтандартногоРеквизита.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения; 
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ПолеОбъекта.Метаданные, ПолеОбъекта.ИмяПоля, ОписаниеСтандартногоРеквизита);
		КонецЦикла;
	Иначе 
		
		Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
			РеквизитОбъекта = СтандартныйРеквизитОбъектаМетаданных(ТаблицаХраненияОбъекта, ПолеОбъекта, ОбъектМетаданных); 
			
			Если РеквизитОбъекта <> Неопределено Тогда 
				ОписаниеСтандартногоРеквизита = ОписаниеОбъектаМетаданных();
				ОписаниеСтандартногоРеквизита.Имя = "СтандартныеРеквизиты";
				ОписаниеСтандартногоРеквизита.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения;
				ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеСтандартногоРеквизита);	
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;	
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

Функция ОбщиеРеквизитыОбъектаМетаданых(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	//ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Поля;
	ПоляОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Поля;
	
	Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
		РеквизитОбъекта = ОбщийРеквизитОбъектаМетаданных(ПолеОбъекта.Метаданные, ОбъектМетаданных);
		Если РеквизитОбъекта <> Неопределено Тогда    	
			ОписаниеОбщихРеквизитов = ОписаниеОбъектаМетаданных();
			ОписаниеОбщихРеквизитов.Имя = "ОбщиеРеквизиты"; 
			ОписаниеОбщихРеквизитов.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения;
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеОбщихРеквизитов);
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;
КонецФункции

Функция РеквизитыОбъектаМетаданных(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;	
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	//ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Поля;
	ПоляОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Поля;
	
	Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
		РеквизитОбъекта = РеквизитОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных); 
		
		Если РеквизитОбъекта <> Неопределено Тогда 
			ОписаниеРеквизитов = ОписаниеОбъектаМетаданных();
			ОписаниеРеквизитов.Имя =  "Реквизиты";
			ОписаниеРеквизитов.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения;
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеРеквизитов);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

Функция ИзмеренияОбъектаМетаданных(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;	
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Поля;
	//ПоляОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Поля;
	
	Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
		РеквизитОбъекта = ИзмерениеОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных); 
		
		Если РеквизитОбъекта <> Неопределено Тогда 
			ОписаниеИзмерения = ОписаниеОбъектаМетаданных();
			ОписаниеИзмерения.Имя = "Измерения";
			ОписаниеИзмерения.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения;
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеИзмерения);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

Функция РесурсыОбъектаМетаданных(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;	
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	//ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Поля;
	ПоляОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Поля;
	
	Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
		РеквизитОбъекта = РесурсОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных); 
		
		Если РеквизитОбъекта <> Неопределено Тогда 
			ОписаниеРесурса = ОписаниеОбъектаМетаданных();
			ОписаниеРесурса.Имя = "Ресурсы";
			ОписаниеРесурса.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения; 
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеРесурса);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

Функция ПризнакиУчетаОбъектаМетаданных(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;		
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	//ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Поля;
	ПоляОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Поля;	
	
	Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
		РеквизитОбъекта = ПризнакУчетаМетаданных(ПолеОбъекта.ИмяПоля, ОбъектМетаданных); 
		
		Если РеквизитОбъекта <> Неопределено Тогда 
			ОписаниеПризнакаУчета = ОписаниеОбъектаМетаданных();
			ОписаниеПризнакаУчета.Имя = "Ресурсы";
			ОписаниеПризнакаУчета.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения; 
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеПризнакаУчета);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

Функция ПризнакиУчетаСубконтоОбъектаМетаданных(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	
	//ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Поля;
	ПоляОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Поля;
	
	Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
		РеквизитОбъекта = ПризнакУчетаСубконтоМетаданных(ПолеОбъекта.ИмяПоля, ОбъектМетаданных); 
		
		Если РеквизитОбъекта <> Неопределено Тогда 
			ОписаниеПризнакаУчетаСубконто = ОписаниеОбъектаМетаданных();
			ОписаниеПризнакаУчетаСубконто.Имя = "Ресурсы";
			ОписаниеПризнакаУчетаСубконто.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения;
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеПризнакаУчетаСубконто);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

Функция РеквизитыАдресацииОбъектаМетаданных(ОписаниеМетаданных)
	ОбъектМетаданных = ОписаниеМетаданных.Метаданные;	
	
	КоллекцииОбходаМетаданных = Новый Массив();	
	
	//ПоляОбъекта = СтруктураХраненияПоОбъектуМетаданных(ОбъектМетаданных.ПолноеИмя()).Поля;
	ПоляОбъекта = ОписаниеМетаданных.ОбъектМетаданныхВСтруктуреХранения.Поля;
	
	Для Каждого ПолеОбъекта Из ПоляОбъекта Цикл 
		РеквизитОбъекта = РеквизитАдресацииОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных); 
		
		Если РеквизитОбъекта <> Неопределено Тогда 
			ОписаниеРеквизитаАдресации = ОписаниеОбъектаМетаданных();
			ОписаниеРеквизитаАдресации.Имя = "РеквизитыАдресации";
			ОписаниеРеквизитаАдресации.ИмяПоляХранения = ПолеОбъекта.ИмяПоляХранения;
			ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, РеквизитОбъекта, РеквизитОбъекта.Имя, ОписаниеРеквизитаАдресации);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

Функция ТаблицыХраненияОбъектаМетаданых(Знач ОписаниеМетаданных)
	
	
	Если ОписаниеМетаданных.Назначение <> Неопределено Тогда
		Возврат Неопределено
	КонецЕсли;
	
	КоллекцииОбходаМетаданных = Новый Массив();
	
	Таблицы = СтруктураХранения.НайтиСтроки(Новый Структура("Метаданные", ОписаниеМетаданных.Метаданные.ПолноеИмя()));
	
	//РодительМетаданныхСтрокой = Строка(ОписаниеМетаданных.Метаданные.Родитель());	
	
	Для Каждого ТаблицаОбъекта Из Таблицы Цикл 
		//ОписаниеМетаданных.Родитель.Назначение = ТаблицаОбъекта.Назначение;
		ОписаниеОбъектаМетаданных = ОписаниеОбъектаМетаданных();
		ОписаниеОбъектаМетаданных.Родитель = ОписаниеМетаданных.Родитель;
		
		ОписаниеОбъектаМетаданных.Имя = ОписаниеМетаданных.Метаданные.Имя;
		ОписаниеОбъектаМетаданных.Метаданные = ОписаниеМетаданных.Метаданные;
		ОписаниеОбъектаМетаданных.Назначение = ТаблицаОбъекта.Назначение;
		ОписаниеОбъектаМетаданных.ОбъектМетаданныхВСтруктуреХранения = ТаблицаОбъекта;
		ОписаниеОбъектаМетаданных.ИмяПоляХранения = ТаблицаОбъекта.ИмяТаблицыХранения;
		//ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, ОписаниеМетаданных.Метаданные, ОписаниеМетаданных.Метаданные.Имя, ОписаниеМетаданных.Родитель);	
		
		КоллекцииОбходаМетаданных.Добавить(ОписаниеОбъектаМетаданных);
	КонецЦикла;
	
	//КонецЕсли;	
	
	Возврат КоллекцииОбходаМетаданных;	
КонецФункции

//Функция СтандартныеТабличныеЧастиОбъектаМетаданных(ОбъектМетаданных)
//	КоллекцииОбходаМетаданных = Новый фикс;
//	
//	Для Каждого СтандартнаяТЧ Из ОбъектМетаданных.СтандартныеТабличныеЧасти Цикл 
//		ДобавитьОписаниеКоллекции(КоллекцииОбходаМетаданных, СтандартнаяТЧ, СтандартнаяТЧ.Имя, ОбъектМетаданных);
//	КонецЦикла;
//	
//	
//	Возврат КоллекцииОбходаМетаданных;
//	
//		
//КонецФункции

//Функция ЭтоОбщийРеквизит(Знач ОбъектМетаданныхИлиПолноеИмя)
//	Если ТипЗнч(ОбъектМетаданныхИлиПолноеИмя) = Тип("Строка") Тогда 
//		ОбъектМетаданныхИлиПолноеИмя = Метаданные.НайтиПоПолномуИмени(ОбъектМетаданныхИлиПолноеИмя);		
//	КонецЕсли;
//	
//	Если ОбъектМетаданныхИлиПолноеИмя = Неопределено Тогда 
//		Возврат Ложь;
//	КонецЕсли;
//	Возврат Метаданные.ОбщиеРеквизиты.Содержит(ОбъектМетаданныхИлиПолноеИмя);	
//КонецФункции

Функция ОбщийРеквизитОбъектаМетаданных(ПолноеИмя, ОбъектМетаданных)
	Если Лев(ПолноеИмя, 14) = "ОбщийРеквизит." Тогда 
		//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);
		Попытка
			Возврат Метаданные.ОбщиеРеквизиты[Сред(ПолноеИмя,15)];
		Исключение
			Возврат Неопределено
		КонецПопытки;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;	
	
	
	//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);		
	//	
	//Если РеквизитОбъекта = Неопределено Тогда 
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Если Метаданные.ОбщиеРеквизиты.Содержит(РеквизитОбъекта) Тогда 
	//	Возврат РеквизитОбъекта;
	//Иначе 
	//	Возврат Неопределено;
	//КонецЕсли;
	
КонецФункции

Функция РеквизитОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных)	
	//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);		
	//	
	//Если РеквизитОбъекта = Неопределено Тогда 
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Если ОбъектМетаданных.Реквизиты.Содержит(РеквизитОбъекта) Тогда 
	//	Возврат РеквизитОбъекта;
	//Иначе 
	//	Возврат Неопределено;
	//КонецЕсли;
	
	Если ПолеОбъекта.Метаданные = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СтрНайти(ПолеОбъекта.Метаданные, ".Реквизит." + ПолеОбъекта.ИмяПоля) <> 0 Тогда 
		Если ПолеОбъекта.ИмяПоля = "" Тогда 
			МассивПути = СтрРазделить(ПолеОбъекта.Метаданные, ".");
			ИмяПоля = МассивПути[МассивПути.Количество()-1];			
		Иначе 
			ИмяПоля = ПолеОбъекта.ИмяПоля;
		КонецЕсли;			
		
		Возврат ОбъектМетаданных.Реквизиты[ИмяПоля];
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	//Попытка
	//	
	//Исключение 
	//	
	//	Возврат Новый Структура("Имя, ИмяПоляХранения", ПолеОбъекта.ИмяПоля, ПолеОбъекта.ИмяПоляХранения);
	//КонецПопытки;
	
	
	//Для Каждого РеквизитОбъекта Из ОбъектМетаданных.Реквизиты Цикл 
	//	Если РеквизитОбъекта.Имя = ИмяРеквизита Тогда 
	//		Возврат РеквизитОбъекта;
	//	КонецЕсли;
	//КонецЦикла;
	
	//Возврат Неопределено;
	
КонецФункции

Функция РеквизитАдресацииОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных)	
	//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);		
	//	
	//Если РеквизитОбъекта = Неопределено Тогда 
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Если ОбъектМетаданных.Реквизиты.Содержит(РеквизитОбъекта) Тогда 
	//	Возврат РеквизитОбъекта;
	//Иначе 
	//	Возврат Неопределено;
	//КонецЕсли;
	
	
	//Для Каждого РеквизитОбъекта Из ОбъектМетаданных.РеквизитыАдресации Цикл 
	//	Если РеквизитОбъекта.Имя = ИмяРеквизита Тогда 
	//		Возврат РеквизитОбъекта;
	//	КонецЕсли;
	//КонецЦикла;
	
	//Возврат Неопределено;
	
	Если ПолеОбъекта.Метаданные = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СтрНайти(ПолеОбъекта.Метаданные, ".РеквизитАдресации." + ПолеОбъекта.ИмяПоля) <> 0 Тогда 
		Возврат ОбъектМетаданных.РеквизитыАдресации[ПолеОбъекта.ИмяПоля];
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция СтандартныйРеквизитОбъектаМетаданных(ТаблицаХраненияОбъекта, ПолеОбъекта, ОбъектМетаданных)	
	Если ТипЗнч(ОбъектМетаданных) = Тип("ОписаниеСтандартнойТабличнойЧасти") Тогда 
		Если ПолеОбъекта.Метаданные <> "" И ПолеОбъекта.ИмяПоля <> "НомерСтроки" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе 	
		Если ПолеОбъекта.Метаданные <> "" И ОбъектМетаданных.ПолноеИмя() <> ПолеОбъекта.Метаданные И ПолеОбъекта.ИмяПоля <> "НомерСтроки" Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;	
		
	//Попытка
	//	Возврат ОбъектМетаданных.СтандартныеРеквизиты[ПолеОбъекта.ИмяПоля];
	//Исключение 
	//	
	//	Возврат Новый Структура("Имя, ИмяПоляХранения", ПолеОбъекта.ИмяПоля, ПолеОбъекта.ИмяПоляХранения);
	//КонецПопытки;
	
	Для Каждого СтандарныйРеквизитОбъекта Из ОбъектМетаданных.СтандартныеРеквизиты Цикл 
		Если СтандарныйРеквизитОбъекта.Имя = ПолеОбъекта.ИмяПоля Тогда 
			Возврат СтандарныйРеквизитОбъекта;
		КонецЕсли;
	КонецЦикла;
	
	ИмяПоля = ПолучитьИмяПоляВТаблицеХранения(ТаблицаХраненияОбъекта.Назначение, ПолеОбъекта.ИмяПоля, ПолеОбъекта.ИмяПоляХранения); 
	
	Возврат Новый Структура("Имя, ИмяПоляХранения", ИмяПоля, ПолеОбъекта.ИмяПоляХранения);	
	
	//Возврат Неопределено;
	//
	
КонецФункции

Функция ИзмерениеОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных)	
	//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);		
	//	
	//Если РеквизитОбъекта = Неопределено Тогда 
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Если ОбъектМетаданных.Измерения.Содержит(РеквизитОбъекта) Тогда 
	//	Возврат РеквизитОбъекта;
	//Иначе 
	//	Возврат Неопределено;
	//КонецЕсли;
	
	//Для Каждого ИзмерениеОбъекта Из ОбъектМетаданных.Измерения Цикл 
	//	Если ИзмерениеОбъекта.Имя = ИмяРеквизита Тогда 
	//		Возврат ИзмерениеОбъекта;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Возврат Неопределено;	
	
	Если ПолеОбъекта.Метаданные = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
		
	//Если СтрНайти(ПолеОбъекта.Метаданные, ".Измерение." + ПолеОбъекта.ИмяПоля) <> 0 Тогда
	Если СтрНайти(ПолеОбъекта.Метаданные, ".Измерение.") <> 0 Тогда 
		Если ПолеОбъекта.ИмяПоля = "" Тогда 
			МассивПути = СтрРазделить(ПолеОбъекта.Метаданные, ".");
			ИмяПоля = МассивПути[МассивПути.Количество()-1];			
		Иначе 
			ИмяПоля = ПолеОбъекта.ИмяПоля;
		КонецЕсли;
			
		Попытка 
			ПолеОбъектаМетаданных = ОбъектМетаданных.Измерения[ИмяПоля];
		Исключение
			ПолеОбъектаМетаданных = Новый Структура("Имя, ИмяПоляХранения", ИмяПоля, ПолеОбъекта.ИмяПоляХранения);	
		КонецПопытки;
		
		Возврат ПолеОбъектаМетаданных;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции

Функция РесурсОбъектаМетаданных(ПолеОбъекта, ОбъектМетаданных)	
	//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);		
	//	
	//Если РеквизитОбъекта = Неопределено Тогда 
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Если ОбъектМетаданных.Ресурсы.Содержит(РеквизитОбъекта) Тогда 
	//	Возврат РеквизитОбъекта;
	//Иначе 
	//	Возврат Неопределено;
	//КонецЕсли;
	
	//Для Каждого РесурсОбъекта Из ОбъектМетаданных.Ресурсы Цикл 
	//	Если РесурсОбъекта.Имя = ИмяРеквизита Тогда 
	//		Возврат РесурсОбъекта;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Возврат Неопределено;
	
	Если ПолеОбъекта.Метаданные = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//Если СтрНайти(ПолеОбъекта.Метаданные, ".Ресурс." + ПолеОбъекта.ИмяПоля) <> 0 Тогда
	Если СтрНайти(ПолеОбъекта.Метаданные, ".Ресурс.") <> 0 Тогда
		Если ПолеОбъекта.ИмяПоля = "" Тогда 
			МассивПути = СтрРазделить(ПолеОбъекта.Метаданные, ".");
			ИмяПоля = МассивПути[МассивПути.Количество()-1];			
		Иначе 
			ИмяПоля = ПолеОбъекта.ИмяПоля;
		КонецЕсли;		
		
		Попытка 
			ПолеОбъектаМетаданных = ОбъектМетаданных.Ресурсы[ИмяПоля];
		Исключение
			ПолеОбъектаМетаданных = Новый Структура("Имя, ИмяПоляХранения", ИмяПоля, ПолеОбъекта.ИмяПоляХранения);	
		КонецПопытки;
		
		
		Возврат ПолеОбъектаМетаданных;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции

Функция ПризнакУчетаМетаданных(ИмяРеквизита, ОбъектМетаданных)
	//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);		
	//	
	//Если РеквизитОбъекта = Неопределено Тогда 
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Если ОбъектМетаданных.ПризнакиУчета.Содержит(РеквизитОбъекта) Тогда 
	//	Возврат РеквизитОбъекта;
	//Иначе 
	//	Возврат Неопределено;
	//КонецЕсли;
	
	Для Каждого ПризнакУчета Из ОбъектМетаданных.ПризнакиУчета Цикл 
		Если ПризнакУчета.Имя = ИмяРеквизита Тогда 
			Возврат ПризнакУчета;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

Функция ПризнакУчетаСубконтоМетаданных(ИмяРеквизита, ОбъектМетаданных)
	//РеквизитОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);		
	//	
	//Если РеквизитОбъекта = Неопределено Тогда 
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//Если ОбъектМетаданных.ПризнакиУчетаСубконто.Содержит(РеквизитОбъекта) Тогда 
	//	Возврат РеквизитОбъекта;
	//Иначе 
	//	Возврат Неопределено;
	//КонецЕсли;
	
	Для Каждого ПризнакУчетаСубконто Из ОбъектМетаданных.ПризнакиУчетаСубконто Цикл 
		Если ПризнакУчетаСубконто.Имя = ИмяРеквизита Тогда 
			Возврат ПризнакУчетаСубконто;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьИмяПоляВТаблицеХранения(Назначение, ИмяПоля, ИмяПоляХранения)
	Если ИмяПоля <> ""  Тогда 
		Возврат ИмяПоля;
	КонецЕсли;
	
	
	Если ИмяВТаблицахХранения.Свойство(Назначение) Тогда 
		Если ИмяВТаблицахХранения[Назначение].Свойство(ИмяПоляХранения) Тогда 
			Возврат ИмяВТаблицахХранения[Назначение][ИмяПоляХранения];
		КонецЕсли;
	КонецЕсли;
	
	//Если Назначение = "Итоги" Тогда 
	//	Если ИмяПоляХранения = "_Period" Тогда
	//		ИмяПоля = "Период";
	//	ИначеЕсли ИмяПоляХранения = "_Splitter" Тогда 
	//		ИмяПоля = "РазделительИтогов";
	//	Иначе 
	//		ИмяПоля = "";
	//	КонецЕсли;
	//ИначеЕсли Назначение = "НастройкиХраненияИтоговРегистраНакопления" Тогда 
	//	ИмяПоля = "";		
	//Иначе 
	//	ИмяПоля = "";	
	//КонецЕсли;
	
	
	Возврат "";	
КонецФункции

Процедура ИнициализироватьСоответствиеИменПолейВТаблицахХранения()
	НастройкиХраненияИтоговРегистраНакопления = Новый Структура;
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_RegID", 				"Идентификатор регистра");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_Period", 				"Периодичность хранения итогов. Не используется");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_ActualPeriod", 		"Хранение актуальных итогов");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_Periodicity", 			"Периодичность регистра");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_RepetitionFactor", 	"Кратность. Не используется");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_UseTotals", 			"Использовать итоги");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_MinPeriod", 			"Минимальный период с которого надо пересчитывать итоги");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_UseSplitter", 			"Использовать разделитель итогов");
	НастройкиХраненияИтоговРегистраНакопления.Вставить("_MinCalculatedPeriod", 	"Минимальный период, по которому нужно расчитывать итоги");
		
	Итоги = Новый Структура;
	Итоги.Вставить("_Period", 	"Момент времени, на который посчитаны остатки"); 
	Итоги.Вставить("_Splitter", "Разделитель итогов");
	Итоги.Вставить("_DimHash", 	"Хеш-функция измерений");
	
	Таблицы = Новый Структура;
	Таблицы.Вставить("_Version", 			"Версия записи"); 
	Таблицы.Вставить("_PredefinedID", 		"Сcылка на предопределенное в метаданных значение");
	Таблицы.Вставить("_PDInitialized", 		"Признак того, что область проинициализирована");
	
	ИмяВТаблицахХранения = Новый Структура;
	ИмяВТаблицахХранения.Вставить("НастройкиХраненияИтоговРегистраНакопления", 												НастройкиХраненияИтоговРегистраНакопления);
	ИмяВТаблицахХранения.Вставить("Итоги", 																					Итоги);
	ИмяВТаблицахХранения.Вставить("Обороты", 																				Итоги);
	ИмяВТаблицахХранения.Вставить("Основная", 																				Таблицы);
	ИмяВТаблицахХранения.Вставить("ИнициализированныеПредопределенныеДанныеСправочника", 									Таблицы);

КонецПроцедуры


// Проверяет наличие реквизита или свойства у произвольного объекта без обращения к метаданным.
//
// Параметры:
//  Объект       - Произвольный - объект, у которого нужно проверить наличие реквизита или свойства;
//  ИмяРеквизита - Строка       - имя реквизита или свойства.
//
// Возвращаемое значение:
//  Булево - Истина, если есть.
//
Функция ЕстьРеквизитИлиСвойствоОбъекта(Объект, ИмяРеквизита) Экспорт
	
	КлючУникальности   = Новый УникальныйИдентификатор;
	СтруктураРеквизита = Новый Структура(ИмяРеквизита, КлючУникальности);
	ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Объект);
	
	Возврат СтруктураРеквизита[ИмяРеквизита] <> КлючУникальности;
	
КонецФункциИ

#КонецОбласти




#Область Инициализация

ИнициализироватьСоответствиеИменПолейВТаблицахХранения();

КартинкаЗеленыйРеквизит 			= Новый Картинка(ПолучитьМакет("КартинкаЗеленыйРеквизит"));
КартинкаИндексы         			= Новый Картинка(ПолучитьМакет("КартинкаИндексы"));
КартинкаОбщиеРеквизиты				= Новый Картинка(ПолучитьМакет("КартинкаОбщийРеквизит"));
КартинкаПризнакиУчета				= Новый Картинка(ПолучитьМакет("КартинкаПризнакиУчета"));
КартинкаПризнакиУчетаСубконто		= Новый Картинка(ПолучитьМакет("КартинкаПризнакиСубконто"));
КартинкаПапка						= Новый Картинка(ПолучитьМакет("КартинкаПапка"));
КартинкаСтандартныеТабличныеЧасти   = Новый Картинка(ПолучитьМакет("КартинкаСтандартныеТабличныеЧасти"));

#КонецОбласти